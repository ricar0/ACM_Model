void init(int n) {
    memset(is_prime, true, sizeof is_prime);
    phi[1] = 1;
    for (int i = 2; i < n; i++) {
        if (is_prime[i]) prime[++k] = i, phi[i] = i - 1;
        for (int j = 1; j <= k && i * prime[j] < n; j++) {
            is_prime[i * prime[j]] = false;
            if (i % prime[j] == 0) {
                phi[i * prime[j]] = phi[i] * prime[j];
                break;
            }
            phi[i * prime[j]] = phi[i] * (prime[j] - 1);
        }
    }
}
ll mod(ll a, ll mm) {return a >= mm ? a % mm + mm : a;}
ll ksm(ll a, ll b, ll mm) {
    ll res = 1, base = a;
    while (b) {
        if (b & 1) res = mod(res * base, mm);
        base = mod(base * base, mm);
        b >>= 1;
    }
    return res;
}
ll calc(ll a, ll b, ll mm) {
    if (b == 0 || mm == 1) return 1;
    else return ksm(a, calc(a, b-1, phi[mm]), mm);
}
ll f(ll a, ll b, ll mm) {
    if (a == 0) return 0;
    ll ans = calc(a, b, mm) % mm;
    return ans;
}